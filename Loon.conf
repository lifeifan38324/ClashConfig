#LFF改编版
#zqzess configure
#Update Date: 2022.11.21 12:19:30 +0000
#author: zqzess

[General]
ipv6 = false
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com,*.ccb.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# [DNS] => DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5,8.8.8.8
allow-udp-proxy = false
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# > 代理测速 URL
proxy-test-url = http://www.gstatic.com/generate_204
# > 测速超时 (s)
test-timeout = 3
interface-mode = auto
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
# 解析器
# resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 


[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
#Subs = https://example/server-complete.txt
#Subs2 = https://example2/server-complete.txt

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
#Netflix = NodeSelect,Subs
#Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
#HK = NameRegex,Subs,FilterKey = *HK
香港_filter = NameRegex, FilterKey = "(?=.*(港|HK|(?i)Hong))"
台湾_filter = NameRegex, FilterKey = "(?=.*(台|TW|(?i)Taiwan))"
日本_filter = NameRegex, FilterKey = "(?=.*(日本|JP|(?i)Japan))"
韩国_filter = NameRegex, FilterKey = "(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))"
美国_filter = NameRegex, FilterKey = "(?=.*(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States))"
狮城_filter = NameRegex, FilterKey = "(?=.*(新加坡|坡|狮城|SG|Singapore))"
俄国_filter = NameRegex, FilterKey = "(?=.*(俄罗斯|俄|俄国|RU|Russia)"
所有_filter = NameRegex, FilterKey = ".*"

[Proxy Group]
# ********* 说明 *********
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT
# ************************

# **** SSID策略组 ****
SSID香港节点 = ssid,default=香港节点,cellular=香港节点,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID美国节点 = ssid,default=美国节点,cellular=美国节点,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID节点选择 = ssid,default=节点选择,cellular=节点选择,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID油管油管 = ssid,default=油管油管,cellular=油管油管,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID电报电报 = ssid,default=电报电报,cellular=电报电报,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID声田声田 = ssid,default=声田声田,cellular=声田声田,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID国外媒体 = ssid,default=国外媒体,cellular=国外媒体,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID长城禁止 = ssid,default=长城禁止,cellular=长城禁止,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png
SSID漏网之鱼 = ssid,default=漏网之鱼,cellular=漏网之鱼,"Redmi_547C"=大陆直连,"Redmi_547C_5G"=大陆直连,"WLL"=大陆直连,"WLL_5G"=大陆直连, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SSID.png

# 代理选择
节点选择 = select, 自动测速, 香港节点, 台湾节点,日本节点,韩国节点,美国节点,狮城节点,俄国节点,DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bypass.png

# 国外APP
油管油管 = select, 节点选择, 自动测速, 香港节点, 台湾节点,日本节点,韩国节点,美国节点,狮城节点,俄国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png
电报电报 = select, 节点选择, 自动测速, 香港节点, 台湾节点,日本节点,韩国节点,美国节点,狮城节点,俄国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
声田声田 = select, 节点选择, 自动测速, 香港节点, 台湾节点,日本节点,韩国节点,美国节点,狮城节点,俄国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
国外媒体 = select, 节点选择, 自动测速, 香港节点, 台湾节点,日本节点,韩国节点,美国节点,狮城节点,俄国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png
长城禁止 = select, 节点选择, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
# PayPal   = select, PROXY, 节点选择, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png
# Netflix  = select, 节点选择, 狮城节点, 香港节点, 台湾节点, 美国节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png

# 国内APP
苹果服务 = select, DIRECT, 节点选择, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
# 网易音乐 = select, DIRECT, 解锁节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music.png
# bilibili = select, DIRECT, 节点选择, 香港节点, 台湾节点, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili_3.png

# 自动测速
自动测速 = url-test, 所有_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
香港节点 = url-test, 香港_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
台湾节点 = url-test, 台湾_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
日本节点 = url-test, 日本_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
韩国节点 = url-test, 韩国_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
美国节点 = url-test, 美国_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
狮城节点 = url-test, 狮城_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
俄国节点 = url-test, 俄国_filter, interval = 300, tolerance = 50, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Russia.png
# 广告屏蔽
广告屏蔽 = select, REJECT, DIRECT, 节点选择, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Reject.png
# 大陆直连
大陆直连 = select, DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png
# Final, 白名单模式 PROXY，黑名单模式 DIRECT
漏网之鱼 = select,节点选择,DIRECT, img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

[Rule]
#本地规则
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
#DOMAIN,google.com,PROXY
DOMAIN,api-drive.mypikpak.com,大陆直连
# GeoIP China
GEOIP,CN,大陆直连
FINAL,SSID漏网之鱼

[Remote Rule]
# 订阅规则URL,策略
# 自定义
https://raw.githubusercontent.com/lifeifan38324/ClashConfig/main/direct/Direct.list,                                 policy=大陆直连,     tag=前直连,   enabled=true
https://raw.githubusercontent.com/lifeifan38324/ClashConfig/main/proxy/ProxyHK.list,                                 policy=SSID香港节点, tag=中香港,   enabled=true
https://raw.githubusercontent.com/lifeifan38324/ClashConfig/main/proxy/ProxyUS.list,                                 policy=SSID美国节点, tag=中美国,   enabled=true
https://raw.githubusercontent.com/lifeifan38324/ClashConfig/main/proxy/Proxy.list,                                   policy=SSID节点选择, tag=中代理,   enabled=true
https://raw.githubusercontent.com/lifeifan38324/ClashConfig/main/direct/DirectAfter.list,                            policy=大陆直连,     tag=后直连,   enabled=true
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/NetEaseMusic/NetEaseMusic.list,      policy=网易音乐, tag=网易云,   enabled=false
https://github.com/zqzess/rule_for_quantumultX/blob/master/Surge/List/AdBlock.list?raw=true,                         policy=广告屏蔽,     tag=广告,     enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list,                 policy=苹果服务,     tag=苹果,     enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/YouTube/YouTube.list,              policy=SSID油管油管, tag=YuTube,   enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list,           policy=SSID电报电报, tag=Telegram, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Music/Spotify.list,  policy=SSID声田声田, tag=Spotify,  enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/GlobalMedia/GlobalMedia.list,      policy=SSID国外媒体, tag=国外媒体, enabled=true
https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/gfw.txt,                                          policy=SSID长城禁止, tag=gfw禁止,  enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list,                             policy=大陆直连,     tag=大陆,     enabled=true

[Host]
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.alipay.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[URL Rewrite]
enable = false
# Redirect Google Search Service
#^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
# https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list, tag=auto(Loon自带), enabled=false

[Script]
enable = false
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

# network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, enabled=false, tag=changeModel(Loon自带)

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
https://github.com/DualSubs/Universal/raw/main/modules/DualSubs.Universal.plugin, tag=DualSubs.Universal, enabled=false
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=SSID节点选择, tag=boxjs, enabled=true
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, tag=DualSubs.YouTube, enabled=true
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/WeiboAds.plugin, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/YouTubeAds.plugin, enabled=false
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Rewrite.plugin, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/SkipProxy.plugin, tag=SkipProxy, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/ReFix.plugin, policy=Outside, tag=规则修正, enabled=true
# https://github.com/chavyleung/scripts/raw/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=Outside, tag=boxjs, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Qsearch.plugin, policy=Outside, tag=safari聚合搜索百度引擎, enabled=true
# https://github.com/VirgilClyne/iRingo/blob/main/plugin/Siri.plugin?raw=true, policy=美国节点, tag= iRingo for Siri & Search, enabled=true
# https://github.com/VirgilClyne/iRingo/blob/main/plugin/Weather.plugin?raw=true, policy=美国节点, tag= iRingo for 🌤 Weather, enabled=false
# https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, tag=spotify解锁, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/AdBlock.plugin, policy=Outside, tag=zqzess自用广告屏蔽插件, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/FanQieNovel.plugin, policy=Outside, tag=番茄小说去广告插件, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/QMusicAd.plugin, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/QzoneAdBlock.plugin, policy=Outside, tag=qq空间广告屏蔽插件, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/bilibili.plugin, policy=Outside, tag=Bilibili增强插件, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/kuwo.plugin, policy=Outside, tag=酷我音乐增强插件, enabled=true
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/zhihu.plugin, policy=Outside, tag=知乎增强插件, enabled=true
# https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokUS.plugin, policy=美国节点, tag=tiktok美区, enabled=false
# https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/BaiduAdBlock.plugin, policy=Outside, tag=百度系广告屏蔽, enabled=false
# https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, policy=DIRECT, tag=订阅解析器, enabled=false

[MITM]
hostname = 
# enable = true
# skip-server-cert-verify = true
# ca-p12 =
# ca-passphrase =